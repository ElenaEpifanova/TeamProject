// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TeamProject.Data;

namespace TeamProject.Migrations
{
    [DbContext(typeof(AppDBContent))]
    [Migration("20201205132615_One")]
    partial class One
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("TeamProject.Data.Models.Executor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Executor");
                });

            modelBuilder.Entity("TeamProject.Data.Models.Place", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Place");
                });

            modelBuilder.Entity("TeamProject.Data.Models.Request", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("PlaceId")
                        .HasColumnType("int");

                    b.Property<int>("ResponsibleId")
                        .HasColumnType("int");

                    b.Property<int>("ShopId")
                        .HasColumnType("int");

                    b.Property<DateTime>("begin")
                        .HasColumnType("datetime2");

                    b.Property<string>("comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("end")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("PlaceId");

                    b.HasIndex("ResponsibleId");

                    b.HasIndex("ShopId");

                    b.ToTable("Request");
                });

            modelBuilder.Entity("TeamProject.Data.Models.Responsible", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Responsible");
                });

            modelBuilder.Entity("TeamProject.Data.Models.Shop", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Shop");
                });

            modelBuilder.Entity("TeamProject.Data.Models.Technic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("ExecutorId")
                        .HasColumnType("int");

                    b.Property<int>("RequestId")
                        .HasColumnType("int");

                    b.Property<int>("TypeTechnicId")
                        .HasColumnType("int");

                    b.Property<int>("delay")
                        .HasColumnType("int");

                    b.Property<int>("duration")
                        .HasColumnType("int");

                    b.Property<string>("path")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ExecutorId");

                    b.HasIndex("RequestId");

                    b.HasIndex("TypeTechnicId");

                    b.ToTable("Technic");
                });

            modelBuilder.Entity("TeamProject.Data.Models.TypeTechnic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TypeTechnic");
                });

            modelBuilder.Entity("TeamProject.Data.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("TeamProject.Data.Models.Executor", b =>
                {
                    b.HasOne("TeamProject.Data.Models.User", "User")
                        .WithMany("executors")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("TeamProject.Data.Models.Request", b =>
                {
                    b.HasOne("TeamProject.Data.Models.Place", "Place")
                        .WithMany("requests")
                        .HasForeignKey("PlaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TeamProject.Data.Models.Responsible", "Responsible")
                        .WithMany("requests")
                        .HasForeignKey("ResponsibleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TeamProject.Data.Models.Shop", "Shop")
                        .WithMany("requests")
                        .HasForeignKey("ShopId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Place");

                    b.Navigation("Responsible");

                    b.Navigation("Shop");
                });

            modelBuilder.Entity("TeamProject.Data.Models.Responsible", b =>
                {
                    b.HasOne("TeamProject.Data.Models.User", "User")
                        .WithMany("responsibles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("TeamProject.Data.Models.Technic", b =>
                {
                    b.HasOne("TeamProject.Data.Models.Executor", "Executor")
                        .WithMany("technics")
                        .HasForeignKey("ExecutorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TeamProject.Data.Models.Request", "Request")
                        .WithMany("technic")
                        .HasForeignKey("RequestId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TeamProject.Data.Models.TypeTechnic", "TypeTechnic")
                        .WithMany("technics")
                        .HasForeignKey("TypeTechnicId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Executor");

                    b.Navigation("Request");

                    b.Navigation("TypeTechnic");
                });

            modelBuilder.Entity("TeamProject.Data.Models.Executor", b =>
                {
                    b.Navigation("technics");
                });

            modelBuilder.Entity("TeamProject.Data.Models.Place", b =>
                {
                    b.Navigation("requests");
                });

            modelBuilder.Entity("TeamProject.Data.Models.Request", b =>
                {
                    b.Navigation("technic");
                });

            modelBuilder.Entity("TeamProject.Data.Models.Responsible", b =>
                {
                    b.Navigation("requests");
                });

            modelBuilder.Entity("TeamProject.Data.Models.Shop", b =>
                {
                    b.Navigation("requests");
                });

            modelBuilder.Entity("TeamProject.Data.Models.TypeTechnic", b =>
                {
                    b.Navigation("technics");
                });

            modelBuilder.Entity("TeamProject.Data.Models.User", b =>
                {
                    b.Navigation("executors");

                    b.Navigation("responsibles");
                });
#pragma warning restore 612, 618
        }
    }
}
